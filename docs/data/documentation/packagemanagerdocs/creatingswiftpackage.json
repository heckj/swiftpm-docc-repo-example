{
  "abstract" : [
    {
      "text" : "Bundle executable or shareable code into a standalone Swift package.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Swift Package Manager"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Creating a Swift package"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A Swift package is a directory that contains sources, dependencies, and has a ",
              "type" : "text"
            },
            {
              "code" : "Package.swift",
              "type" : "codeVoice"
            },
            {
              "text" : " manifest file at its root.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Swift packages can provide libraries, executables, tests, plugins, and macros.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The package manifest defines what is in the package, which is itself written in Swift.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " defines the types, properties, and functions that go into assembling a package manifest.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Creating-a-Library-Package",
          "level" : 3,
          "text" : "Creating a Library Package",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Swift package manager supports creating packages using ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageInit",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "By default, the package manager creates a package structure focused on providing a library.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, you can create a directory and run the command ",
              "type" : "text"
            },
            {
              "code" : "swift package init",
              "type" : "codeVoice"
            },
            {
              "text" : " to create a package:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "$ mkdir MyPackage",
            "$ cd MyPackage",
            "$ swift package init"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The structure provided follows package manager conventions, and provides a fully operational example.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "In addition to the package manifest, Swift sources are collected by target name under the ",
              "type" : "text"
            },
            {
              "code" : "Sources",
              "type" : "codeVoice"
            },
            {
              "text" : " directory, and tests collected, also by target name, under the ",
              "type" : "text"
            },
            {
              "code" : "Tests",
              "type" : "codeVoice"
            },
            {
              "text" : " directory:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "├── Package.swift",
            "├── Sources",
            "│   └── MyPackage",
            "│       └── MyPackage.swift",
            "└── Tests",
            "    └── MyPackageTests",
            "        └── MyPackageTests.swift"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can immediately use both of ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftBuild",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftTest",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "$ swift build",
            "$ swift test"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "anchor" : "Creating-an-Executable-Package",
          "level" : 3,
          "text" : "Creating an Executable Package",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Swift Package Manager can also create a new package with a simplified structure focused on creating executables.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, create a directory and run the ",
              "type" : "text"
            },
            {
              "code" : "init",
              "type" : "codeVoice"
            },
            {
              "text" : " command with the option ",
              "type" : "text"
            },
            {
              "code" : "--type executable",
              "type" : "codeVoice"
            },
            {
              "text" : " to get a package that provides a “Hello World” executable:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "$ mkdir MyExecutable",
            "$ cd MyExecutable",
            "$ swift package init --type executable",
            "$ swift run",
            "Hello, World!"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "There is an additional option for creating a command-line executable based on the ",
              "type" : "text"
            },
            {
              "code" : "swift-argument-parser",
              "type" : "codeVoice"
            },
            {
              "text" : ", convenient for parsing command line arguments and structuring commands.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Use ",
              "type" : "text"
            },
            {
              "code" : "tool",
              "type" : "codeVoice"
            },
            {
              "text" : " for the ",
              "type" : "text"
            },
            {
              "code" : "type",
              "type" : "codeVoice"
            },
            {
              "text" : " option in ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageInit",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Like the ",
              "type" : "text"
            },
            {
              "code" : "executable",
              "type" : "codeVoice"
            },
            {
              "text" : " template, it is fully operational and also prints “Hello World”.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Creating-a-Macro-Package",
          "level" : 3,
          "text" : "Creating a Macro Package",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Swift Package Manager can generate boilerplate for custom macros:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "$ mkdir MyMacro",
            "$ cd MyMacro",
            "$ swift package init --type macro",
            "$ swift build",
            "$ swift run",
            "The value 42 was produced by the code \"a + b\""
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "This creates a package with:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "A ",
                      "type" : "text"
                    },
                    {
                      "code" : ".macro",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " type target with its required dependencies on ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/github.com\/swiftlang\/swift-syntax",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ",",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "A library ",
                      "type" : "text"
                    },
                    {
                      "code" : ".target",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : "  containing the macro’s code.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "An ",
                      "type" : "text"
                    },
                    {
                      "code" : ".executableTarget",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " for running the macro.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "A ",
                      "type" : "text"
                    },
                    {
                      "code" : ".testTarget",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " for test the macro implementation.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "The sample macro, ",
              "type" : "text"
            },
            {
              "code" : "StringifyMacro",
              "type" : "codeVoice"
            },
            {
              "text" : ", is documented in the Swift Evolution proposal for ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/swiftlang\/swift-evolution\/blob\/main\/proposals\/0382-expression-macros.md",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and the WWDC ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10166",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " video.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For further documentation, see macros in ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.swift.org\/swift-book\/documentation\/the-swift-programming-language\/macros\/",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " book.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Guides",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary"
      ],
      "title" : "Guides"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/packagemanagerdocs\/creatingswiftpackage"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"command-icon.svg": {
  "alt" : null,
  "identifier" : "command-icon.svg",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon.svg"
    },
    {
      "traits" : [
        "1x",
        "dark"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon~dark.svg"
    }
  ]
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs": {
  "abstract" : [
    {
      "text" : "Organize, manage, and edit Swift packages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift Package Manager",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/AddingDependencies": {
  "abstract" : [
    {
      "text" : "Use other swift packages, system libraries, or binary dependencies in your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Adding dependencies to a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/addingdependencies"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/BundlingResources": {
  "abstract" : [
    {
      "text" : "Add resource files to your Swift package and access them in your code.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
  "kind" : "article",
  "role" : "article",
  "title" : "Bundling resources with a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/bundlingresources"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ContinuousIntegration": {
  "abstract" : [
    {
      "text" : "Build Swift packages with an existing continuous integration setup and prepare apps that consume package dependencies within an existing CI pipeline.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
  "kind" : "article",
  "role" : "article",
  "title" : "Continuous Integration Workflows",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/continuousintegration"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingCLanguageTargets": {
  "abstract" : [
    {
      "text" : "Include C language code as a target in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating C language targets",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingclanguagetargets"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ModuleAliasing": {
  "abstract" : [
    {
      "text" : "Create aliased names for modules to avoid collisions between targets in your package or its dependencies.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
  "kind" : "article",
  "role" : "article",
  "title" : "Module Aliasing",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/modulealiasing"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageCollections": {
  "abstract" : [
    {
      "text" : "Learn to create, publish and use Swift package collections.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
  "kind" : "article",
  "role" : "article",
  "title" : "Package Collections",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packagecollections"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageInit": {
  "abstract" : [
    {
      "text" : "Initialize a new package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageInit",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift package init",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packageinit"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/Plugins": {
  "abstract" : [
    {
      "text" : "Extend package manager functionality with build or command plugins.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Plugins",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/plugins"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ReleasingPublishingAPackage": {
  "abstract" : [
    {
      "text" : "Share a specific version of your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Releasing and publishing a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/releasingpublishingapackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ResolvingPackageVersions": {
  "abstract" : [
    {
      "text" : "Coordinate and constrain dependencies for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
  "kind" : "article",
  "role" : "article",
  "title" : "Resolving and updating dependencies",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/resolvingpackageversions"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SettingSwiftToolsVersion": {
  "abstract" : [
    {
      "text" : "Define the minimum version of the swift compiler required for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
  "kind" : "article",
  "role" : "article",
  "title" : "Setting the Swift tools version",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/settingswifttoolsversion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftBuild": {
  "abstract" : [
    {
      "text" : "Build sources into binary products.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftBuild",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift build",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftbuild"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftPMAsALibrary": {
  "abstract" : [
    {
      "text" : "Include Swift Package Manager as a dependency in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Package Manager as a library",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftpmasalibrary"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftTest": {
  "abstract" : [
    {
      "text" : "Build and run tests.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftTest",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift test",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swifttest"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftVersionSpecificPackaging": {
  "abstract" : [
    {
      "text" : "Provide a package manifest for a specific version of Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
  "kind" : "article",
  "role" : "article",
  "title" : "Packaging based on the version of Swift",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftversionspecificpackaging"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingBuildConfigurations": {
  "abstract" : [
    {
      "text" : "Control the build configuration for your app or package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
  "kind" : "article",
  "role" : "article",
  "title" : "Using build configurations",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingbuildconfigurations"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingShellCompletion": {
  "abstract" : [
    {
      "text" : "Customize your shell to automatically complete swift package commands.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
  "kind" : "article",
  "role" : "article",
  "title" : "Using shell completion scripts",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingshellcompletion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingSwiftPackageRegistry": {
  "abstract" : [
    {
      "text" : "Configure and use a package registry for Swift Package Manager.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
  "kind" : "article",
  "role" : "article",
  "title" : "Using a package registry",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingswiftpackageregistry"
},
"https://developer.apple.com/documentation/packagedescription": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription",
  "title" : "API reference for PackageDescription",
  "titleInlineContent" : [
    {
      "text" : "API reference for PackageDescription",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/packagedescription"
},
"https://developer.apple.com/videos/play/wwdc2023/10166": {
  "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10166",
  "title" : "Write Swift macros",
  "titleInlineContent" : [
    {
      "text" : "Write Swift macros",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10166"
},
"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/macros/": {
  "identifier" : "https:\/\/docs.swift.org\/swift-book\/documentation\/the-swift-programming-language\/macros\/",
  "title" : "The Swift Programming Language",
  "titleInlineContent" : [
    {
      "text" : "The Swift Programming Language",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.swift.org\/swift-book\/documentation\/the-swift-programming-language\/macros\/"
},
"https://github.com/swiftlang/swift-evolution/blob/main/proposals/0382-expression-macros.md": {
  "identifier" : "https:\/\/github.com\/swiftlang\/swift-evolution\/blob\/main\/proposals\/0382-expression-macros.md",
  "title" : "Expression Macros",
  "titleInlineContent" : [
    {
      "text" : "Expression Macros",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/swiftlang\/swift-evolution\/blob\/main\/proposals\/0382-expression-macros.md"
},
"https://github.com/swiftlang/swift-syntax": {
  "identifier" : "https:\/\/github.com\/swiftlang\/swift-syntax",
  "title" : "swift-syntax",
  "titleInlineContent" : [
    {
      "text" : "swift-syntax",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/swiftlang\/swift-syntax"
}
}
}