{
  "abstract" : [
    {
      "text" : "Use other swift packages, system libraries, or binary dependencies in your package.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Swift Package Manager"
      }
    ],
    "role" : "collectionGroup",
    "title" : "Adding dependencies to a Swift package"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To depend on another Swift package, define a dependency and the requirements for its version if itâ€™s remote, then add a product of that dependency to one or more of your targets.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "A remote dependency requires a location, represented by a URL, and a requirement on the versions the package manager may use.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The following example illustrates a package that depends on ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/apple\/example-package-playingcard",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", using ",
              "type" : "text"
            },
            {
              "code" : "from",
              "type" : "codeVoice"
            },
            {
              "text" : " to require at least version ",
              "type" : "text"
            },
            {
              "code" : "3.0.4",
              "type" : "codeVoice"
            },
            {
              "text" : ", and allow any other version up to the next major version that is available at the time of dependency resolution.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "It then uses the product ",
              "type" : "text"
            },
            {
              "code" : "PlayingCard",
              "type" : "codeVoice"
            },
            {
              "text" : " as a dependency for the target ",
              "type" : "text"
            },
            {
              "code" : "MyPackage",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ swift-tools-version:6.1",
            "import PackageDescription",
            "",
            "let package = Package(",
            "    name: \"MyPackage\",",
            "    dependencies: [",
            "        .package(url: \"https:\/\/github.com\/apple\/example-package-playingcard.git\", ",
            "                 from: \"3.0.4\"),",
            "    ],",
            "    targets: [",
            "        .target(",
            "            name: \"MyPackage\",",
            "            dependencies: [",
            "                .product(name: \"PlayingCard\", ",
            "                         package: \"example-package-playingcard\")",
            "            ]",
            "        ),",
            "        .testTarget(",
            "            name: \"MyPackageTests\",",
            "            dependencies: [\"MyPackage\"]",
            "        ),",
            "    ]",
            ")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The package manager automatically resolves packages when you invoke ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftRun",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftBuild",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "You can explicitly resolve the packages with the command ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageResolve",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For more information on resolving package versions, see ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Constraining-dependency-versions",
          "level" : 3,
          "text" : "Constraining dependency versions",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Constrain the version of a remote dependency when you when you declare the dependency.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The package manager uses git tags interpretted as semantic versions to identify eligible versions of packages.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Tags for package versions should include all three components of a semantic version: major, minor, and patch.",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "Tags that only include one or two of those components are not interpreted as semantic versions.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use the version requirement when you declare the dependency to limit what the package manager can choose.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The version requirement can be a range of possible semantic versions, a specific semantic version, a branch name, or a commit hash.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The API reference documentation for ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " defines the methods to use.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Local-Dependencies",
          "level" : 3,
          "text" : "Local Dependencies",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To use a local package as a dependency, use either ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency\/package(name:path:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency\/package(path:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to define it with the local path to the package.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Local dependencies do not enforce version constraints, and instead use the version that is available at the path you provide.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "System-Library-Dependencies",
          "level" : 3,
          "text" : "System Library Dependencies",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In addition to depending on Swift packages, you can also depend on system libraries or, on Apple platforms, precompiled binary dependencies.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For more information on using a library provided by the system as a dependency, see ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingSystemLibraryDependency",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Precomiled-Binary-Targets-for-Apple-platforms",
          "level" : 3,
          "text" : "Precomiled Binary Targets for Apple platforms",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To add a dependency on a precompiled binary target, specify a ",
              "type" : "text"
            },
            {
              "code" : ".binaryTarget",
              "type" : "codeVoice"
            },
            {
              "text" : " in your list of targets, using either",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/target\/binarytarget(name:url:checksum:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for a downloadable target,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "or ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/target\/binarytarget(name:path:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for a local binary.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "After adding the binary target, you can add it to the list of dependencies for any other target.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For more information on identifying and verifying a binary target, see ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/xcode\/identifying-binary-dependencies",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For more information on creating a binary target, see ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/xcode\/creating-a-multi-platform-binary-framework-bundle",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Guides",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary"
      ],
      "title" : "Guides"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Topics",
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingDependencyFailures",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingSystemLibraryDependency",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ExampleSystemLibraryPkgConfig",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EditingDependencyPackage"
      ]
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/packagemanagerdocs\/addingdependencies"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"command-icon.svg": {
  "alt" : null,
  "identifier" : "command-icon.svg",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon.svg"
    },
    {
      "traits" : [
        "1x",
        "dark"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon~dark.svg"
    }
  ]
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs": {
  "abstract" : [
    {
      "text" : "Organize, manage, and edit Swift packages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift Package Manager",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/AddingSystemLibraryDependency": {
  "abstract" : [
    {
      "text" : "Define the location for the library and provide module map to expose C headers to Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingSystemLibraryDependency",
  "kind" : "article",
  "role" : "article",
  "title" : "Adding a dependency on a system library.",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/addingsystemlibrarydependency"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/BundlingResources": {
  "abstract" : [
    {
      "text" : "Add resource files to your Swift package and access them in your code.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
  "kind" : "article",
  "role" : "article",
  "title" : "Bundling resources with a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/bundlingresources"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ContinuousIntegration": {
  "abstract" : [
    {
      "text" : "Build Swift packages with an existing continuous integration setup and prepare apps that consume package dependencies within an existing CI pipeline.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
  "kind" : "article",
  "role" : "article",
  "title" : "Continuous Integration Workflows",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/continuousintegration"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingCLanguageTargets": {
  "abstract" : [
    {
      "text" : "Include C language code as a target in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating C language targets",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingclanguagetargets"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingSwiftPackage": {
  "abstract" : [
    {
      "text" : "Bundle executable or shareable code into a standalone Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingswiftpackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/EditingDependencyPackage": {
  "abstract" : [
    {
      "text" : "Temporarily switch a remote dependency to local in order to edit the dependency.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EditingDependencyPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Editing a remote dependency used in a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/editingdependencypackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ExampleSystemLibraryPkgConfig": {
  "abstract" : [
    {
      "text" : "Create an Command-line executable package that uses libgit2 as a system library dependency.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ExampleSystemLibraryPkgConfig",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift package example that uses system library dependency with pkg-config",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/examplesystemlibrarypkgconfig"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ModuleAliasing": {
  "abstract" : [
    {
      "text" : "Create aliased names for modules to avoid collisions between targets in your package or its dependencies.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
  "kind" : "article",
  "role" : "article",
  "title" : "Module Aliasing",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/modulealiasing"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageCollections": {
  "abstract" : [
    {
      "text" : "Learn to create, publish and use Swift package collections.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
  "kind" : "article",
  "role" : "article",
  "title" : "Package Collections",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packagecollections"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageResolve": {
  "abstract" : [
    {
      "text" : "Resolve package dependencies.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageResolve",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift package resolve",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packageresolve"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/Plugins": {
  "abstract" : [
    {
      "text" : "Extend package manager functionality with build or command plugins.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Plugins",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/plugins"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ReleasingPublishingAPackage": {
  "abstract" : [
    {
      "text" : "Share a specific version of your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Releasing and publishing a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/releasingpublishingapackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ResolvingDependencyFailures": {
  "abstract" : [
    {
      "text" : "Understand dependency failure scenarios.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingDependencyFailures",
  "kind" : "article",
  "role" : "article",
  "title" : "Resolving package dependency failures",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/resolvingdependencyfailures"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ResolvingPackageVersions": {
  "abstract" : [
    {
      "text" : "Coordinate and constrain dependencies for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
  "kind" : "article",
  "role" : "article",
  "title" : "Resolving and updating dependencies",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/resolvingpackageversions"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SettingSwiftToolsVersion": {
  "abstract" : [
    {
      "text" : "Define the minimum version of the swift compiler required for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
  "kind" : "article",
  "role" : "article",
  "title" : "Setting the Swift tools version",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/settingswifttoolsversion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftBuild": {
  "abstract" : [
    {
      "text" : "Build sources into binary products.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftBuild",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift build",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftbuild"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftPMAsALibrary": {
  "abstract" : [
    {
      "text" : "Include Swift Package Manager as a dependency in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Package Manager as a library",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftpmasalibrary"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftRun": {
  "abstract" : [
    {
      "text" : "Build and run an executable product.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftRun",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift run",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftrun"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftVersionSpecificPackaging": {
  "abstract" : [
    {
      "text" : "Provide a package manifest for a specific version of Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
  "kind" : "article",
  "role" : "article",
  "title" : "Packaging based on the version of Swift",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftversionspecificpackaging"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingBuildConfigurations": {
  "abstract" : [
    {
      "text" : "Control the build configuration for your app or package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
  "kind" : "article",
  "role" : "article",
  "title" : "Using build configurations",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingbuildconfigurations"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingShellCompletion": {
  "abstract" : [
    {
      "text" : "Customize your shell to automatically complete swift package commands.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
  "kind" : "article",
  "role" : "article",
  "title" : "Using shell completion scripts",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingshellcompletion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingSwiftPackageRegistry": {
  "abstract" : [
    {
      "text" : "Configure and use a package registry for Swift Package Manager.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
  "kind" : "article",
  "role" : "article",
  "title" : "Using a package registry",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingswiftpackageregistry"
},
"https://developer.apple.com/documentation/packagedescription/package/dependency": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency",
  "title" : "Package.Dependency",
  "titleInlineContent" : [
    {
      "text" : "Package.Dependency",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency"
},
"https://developer.apple.com/documentation/packagedescription/package/dependency/package(name:path:)": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency\/package(name:path:)",
  "title" : "package(name:path:)",
  "titleInlineContent" : [
    {
      "text" : "package(name:path:)",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency\/package(name:path:)"
},
"https://developer.apple.com/documentation/packagedescription/package/dependency/package(path:)": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency\/package(path:)",
  "title" : "package(path:)",
  "titleInlineContent" : [
    {
      "text" : "package(path:)",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/package\/dependency\/package(path:)"
},
"https://developer.apple.com/documentation/packagedescription/target/binarytarget(name:path:)": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/target\/binarytarget(name:path:)",
  "title" : "binarytarget(name:path:)",
  "titleInlineContent" : [
    {
      "text" : "binarytarget(name:path:)",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/target\/binarytarget(name:path:)"
},
"https://developer.apple.com/documentation/packagedescription/target/binarytarget(name:url:checksum:)": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/target\/binarytarget(name:url:checksum:)",
  "title" : "binarytarget(name:url:checksum:)",
  "titleInlineContent" : [
    {
      "text" : "binarytarget(name:url:checksum:)",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/packagedescription\/target\/binarytarget(name:url:checksum:)"
},
"https://developer.apple.com/documentation/xcode/creating-a-multi-platform-binary-framework-bundle": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/xcode\/creating-a-multi-platform-binary-framework-bundle",
  "title" : "Creating a multiplatform binary framework bundle",
  "titleInlineContent" : [
    {
      "text" : "Creating a multiplatform binary framework bundle",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/xcode\/creating-a-multi-platform-binary-framework-bundle"
},
"https://developer.apple.com/documentation/xcode/identifying-binary-dependencies": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/xcode\/identifying-binary-dependencies",
  "title" : "Identifying binary dependencies",
  "titleInlineContent" : [
    {
      "text" : "Identifying binary dependencies",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/xcode\/identifying-binary-dependencies"
},
"https://github.com/apple/example-package-playingcard": {
  "identifier" : "https:\/\/github.com\/apple\/example-package-playingcard",
  "title" : "PlayingCard",
  "titleInlineContent" : [
    {
      "text" : "PlayingCard",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/apple\/example-package-playingcard"
}
}
}