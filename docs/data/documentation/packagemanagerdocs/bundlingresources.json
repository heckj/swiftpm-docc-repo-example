{
  "abstract" : [
    {
      "text" : "Add resource files to your Swift package and access them in your code.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Swift Package Manager"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Bundling resources with a Swift package"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you declare ",
              "type" : "text"
            },
            {
              "code" : "\/\/ swift-tools-version: 5.3",
              "type" : "codeVoice"
            },
            {
              "text" : " or later in your ",
              "type" : "text"
            },
            {
              "code" : "Package.swift",
              "type" : "codeVoice"
            },
            {
              "text" : " file, you can bundle resources alongside your source code in Swift packages.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, Swift packages can contain asset catalogs, test fixtures, and so on.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Add-resource-files",
          "level" : 3,
          "text" : "Add resource files",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Package manager treats non-source files found in the target’s sources directory as assets, scoped to that target.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, any resources for the ",
              "type" : "text"
            },
            {
              "code" : "MyLibrary",
              "type" : "codeVoice"
            },
            {
              "text" : " target reside by default in ",
              "type" : "text"
            },
            {
              "code" : "Sources\/MyLibrary",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "To easily distinguish resources from source files, create and use a subfolder for the resources.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, put all resource files into a directory named ",
              "type" : "text"
            },
            {
              "code" : "Resources",
              "type" : "codeVoice"
            },
            {
              "text" : ", resulting in all of your resource files residing at ",
              "type" : "text"
            },
            {
              "code" : "Sources\/MyLibrary\/Resources",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Explicitly-declare-or-exclude-resources",
          "level" : 3,
          "text" : "Explicitly declare or exclude resources",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To add a resource that the compiler doesn’t handle automatically, explicitly declare it as a resource in your package manifest.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "If you’re building your package with Xcode, it automatically handles a number of kinds of resources.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, to include a file ",
              "type" : "text"
            },
            {
              "code" : "text.txt",
              "type" : "codeVoice"
            },
            {
              "text" : " as a resource, add the file into ",
              "type" : "text"
            },
            {
              "code" : "Sources\/MyLibrary\/Resources",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Then explicitly declare it as a package resource by adding the name of the file to the list of resources for your target:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "targets: [",
            "    .target(",
            "        name: \"MyLibrary\",",
            "        resources: [",
            "            .process(\"Resources\/text.txt\")]",
            "    ),",
            "]"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The example above uses  ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/PackageDescription\/Resource\/process(_:localization:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to identify the resource.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "When you explicitly declare a resource, choose a rule to determine how Swift treats the resource file.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The options include:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "For most use cases, use ",
                        "type" : "text"
                      },
                      {
                        "identifier" : "https:\/\/developer.apple.com\/documentation\/PackageDescription\/Resource\/process(_:localization:)",
                        "isActive" : true,
                        "overridingTitle" : "process(_:localization:)",
                        "overridingTitleInlineContent" : [
                          {
                            "text" : "process(_:localization:)",
                            "type" : "text"
                          }
                        ],
                        "type" : "reference"
                      },
                      {
                        "text" : ". This requests the compiler to apply any processing known for the type of resource, according to the platform you’re building the package for. For example, Xcode may optimize image files for a platform that supports such optimizations. If you apply the process rule to a directory’s path, Xcode applies the rule recursively to all files within the directory. If no special processing is available for a resource, the compiler copies the resource as is to the resource bundle’s top-level directory.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Process rule",
                    "type" : "text"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Some Swift packages may require a resource file to remain untouched or to retain a certain directory structure for resources. Use the ",
                        "type" : "text"
                      },
                      {
                        "identifier" : "https:\/\/developer.apple.com\/documentation\/PackageDescription\/Resource\/copy(_:)",
                        "isActive" : true,
                        "type" : "reference"
                      },
                      {
                        "text" : " function to apply this rule and copy the resource as is to the top level of the resource bundle. If you pass a directory path to the copy rule, the compiler retains the directory’s structure.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Copy rule",
                    "type" : "text"
                  }
                ]
              }
            }
          ],
          "type" : "termList"
        },
        {
          "inlineContent" : [
            {
              "text" : "If a file resides inside a target’s folder and you don’t want it to be a package resource, pass it to the target initializer’s ",
              "type" : "text"
            },
            {
              "code" : "exclude",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, if you have a file called ",
              "type" : "text"
            },
            {
              "code" : "instructions.md",
              "type" : "codeVoice"
            },
            {
              "text" : " in the sources directory, meant only for local use and not intended to be bundled, use ",
              "type" : "text"
            },
            {
              "code" : "exclude",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "targets: [",
            "    .target(",
            "        name: \"MyLibrary\",",
            "        exclude:[\"instructions.md\"]",
            "    ),",
            "]"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "In general, avoid placing files that aren’t resources in a target’s source folder.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "If that’s not feasible, avoid excluding every file individually, place all files you want to exclude in a directory, and add the directory path to the array of excluded files.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Swift Package Manager warns you about files it doesn’t recognize in a target’s ",
              "type" : "text"
            },
            {
              "code" : "Sources",
              "type" : "codeVoice"
            },
            {
              "text" : " directory.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Access-a-resource-in-code",
          "level" : 3,
          "text" : "Access a resource in code",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If a target includes resources, the compiler creates a resource bundle and an internal static extension on ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/Foundation\/Bundle",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to access it for each module.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Use the extension to locate package resources.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, use the following to retrieve the URL to a property list you bundle with your package:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let settingsURL = Bundle.module.url(forResource: \"settings\", withExtension: \"plist\")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Always use ",
                  "type" : "text"
                },
                {
                  "code" : "Bundle.module",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to access resources.",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "A package shouldn’t make assumptions about the exact location of a resource.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you want to make a package resource available to apps that depend on your Swift package, declare a public constant for it.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, use the following to expose a property list file to apps that use your Swift package:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let settingsURL = Bundle.module.url(forResource: \"settings\", withExtension: \"plist\")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Guides",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary"
      ],
      "title" : "Guides"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/packagemanagerdocs\/bundlingresources"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PackageManagerDocs/documentation/PackageManagerDocs": {
  "abstract" : [
    {
      "text" : "Organize, manage, and edit Swift packages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift Package Manager",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/AddingDependencies": {
  "abstract" : [
    {
      "text" : "Use other swift packages, system libraries, or binary dependencies in your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Adding dependencies to a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/addingdependencies"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ContinuousIntegration": {
  "abstract" : [
    {
      "text" : "Build Swift packages with an existing continuous integration setup and prepare apps that consume package dependencies within an existing CI pipeline.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
  "kind" : "article",
  "role" : "article",
  "title" : "Continuous Integration Workflows",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/continuousintegration"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingCLanguageTargets": {
  "abstract" : [
    {
      "text" : "Include C language code as a target in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating C language targets",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingclanguagetargets"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingSwiftPackage": {
  "abstract" : [
    {
      "text" : "Bundle executable or shareable code into a standalone Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingswiftpackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ModuleAliasing": {
  "abstract" : [
    {
      "text" : "Create aliased names for modules to avoid collisions between targets in your package or its dependencies.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
  "kind" : "article",
  "role" : "article",
  "title" : "Module Aliasing",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/modulealiasing"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageCollections": {
  "abstract" : [
    {
      "text" : "Learn to create, publish and use Swift package collections.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
  "kind" : "article",
  "role" : "article",
  "title" : "Package Collections",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packagecollections"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/Plugins": {
  "abstract" : [
    {
      "text" : "Extend package manager functionality with build or command plugins.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Plugins",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/plugins"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ReleasingPublishingAPackage": {
  "abstract" : [
    {
      "text" : "Share a specific version of your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Releasing and publishing a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/releasingpublishingapackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ResolvingPackageVersions": {
  "abstract" : [
    {
      "text" : "Coordinate and constrain dependencies for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
  "kind" : "article",
  "role" : "article",
  "title" : "Resolving and updating dependencies",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/resolvingpackageversions"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SettingSwiftToolsVersion": {
  "abstract" : [
    {
      "text" : "Define the minimum version of the swift compiler required for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
  "kind" : "article",
  "role" : "article",
  "title" : "Setting the Swift tools version",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/settingswifttoolsversion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftPMAsALibrary": {
  "abstract" : [
    {
      "text" : "Include Swift Package Manager as a dependency in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Package Manager as a library",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftpmasalibrary"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftVersionSpecificPackaging": {
  "abstract" : [
    {
      "text" : "Provide a package manifest for a specific version of Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
  "kind" : "article",
  "role" : "article",
  "title" : "Packaging based on the version of Swift",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftversionspecificpackaging"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingBuildConfigurations": {
  "abstract" : [
    {
      "text" : "Control the build configuration for your app or package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
  "kind" : "article",
  "role" : "article",
  "title" : "Using build configurations",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingbuildconfigurations"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingShellCompletion": {
  "abstract" : [
    {
      "text" : "Customize your shell to automatically complete swift package commands.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
  "kind" : "article",
  "role" : "article",
  "title" : "Using shell completion scripts",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingshellcompletion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingSwiftPackageRegistry": {
  "abstract" : [
    {
      "text" : "Configure and use a package registry for Swift Package Manager.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
  "kind" : "article",
  "role" : "article",
  "title" : "Using a package registry",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingswiftpackageregistry"
},
"https://developer.apple.com/documentation/Foundation/Bundle": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/Foundation\/Bundle",
  "title" : "Bundle",
  "titleInlineContent" : [
    {
      "text" : "Bundle",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/Foundation\/Bundle"
},
"https://developer.apple.com/documentation/PackageDescription/Resource/copy(_:)": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/PackageDescription\/Resource\/copy(_:)",
  "title" : "copy(_:)",
  "titleInlineContent" : [
    {
      "text" : "copy(_:)",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/PackageDescription\/Resource\/copy(_:)"
},
"https://developer.apple.com/documentation/PackageDescription/Resource/process(_:localization:)": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/PackageDescription\/Resource\/process(_:localization:)",
  "title" : "process(_:localization:)",
  "titleInlineContent" : [
    {
      "text" : "process(_:localization:)",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/PackageDescription\/Resource\/process(_:localization:)"
}
}
}