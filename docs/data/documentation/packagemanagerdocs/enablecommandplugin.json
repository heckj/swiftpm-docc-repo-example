{
  "abstract" : [
    {
      "text" : "Extend package manager commands with a command plugin from another package.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableCommandPlugin"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Swift Package Manager"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "introducedAt" : "5.6",
        "name" : "Swift"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Enable a command plugin"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To get access to a plugin from another package, add a dependency on the package that provides the plugin.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This lets the package access any plugins from the dependency.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Add-a-dependency",
          "level" : 3,
          "text" : "Add a dependency",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, to enable the plugins from ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/swiftlang\/swift-docc-plugin",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", add it as a dependency:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let package = Package(",
            "    \/\/ name, platforms, products, etc.",
            "    dependencies: [",
            "        \/\/ other dependencies",
            "        .package(url: \"https:\/\/github.com\/swiftlang\/swift-docc-plugin\",",
            "                 from: \"1.0.0\"),",
            "    ],",
            "    targets: [",
            "        \/\/ targets",
            "    ]",
            ")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "View-available-plugins",
          "level" : 3,
          "text" : "View available plugins",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Run ",
              "type" : "text"
            },
            {
              "code" : "swift package plugin --list",
              "type" : "codeVoice"
            },
            {
              "text" : " to see available plugins.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For full documentation on the plugin command, see ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackagePlugin",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Invoke an available plugin using ",
              "type" : "text"
            },
            {
              "code" : "swift package",
              "type" : "codeVoice"
            },
            {
              "text" : " followed by the plugin, and provide any parameters or options required.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, the following command invokes the ",
              "type" : "text"
            },
            {
              "code" : "generate-documentation",
              "type" : "codeVoice"
            },
            {
              "text" : " command from ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/swiftlang\/swift-docc-plugin",
              "isActive" : true,
              "overridingTitle" : "swift-docc-plugin",
              "overridingTitleInlineContent" : [
                {
                  "text" : "swift-docc-plugin",
                  "type" : "text"
                }
              ],
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "swift package generate-documentation"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "anchor" : "Pass-arguments-and-flags-to-the-plugin",
          "level" : 3,
          "text" : "Pass arguments and flags to the plugin",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Package manager passes all command line arguments and flags after the invocation verb to the plugin.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, if your package has multiple targets you may want to specify a single target with the parameter: ",
              "type" : "text"
            },
            {
              "code" : "--target",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "An updated example that previews the hypothetical target ",
              "type" : "text"
            },
            {
              "code" : "MyTarget",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "swift package generate-documentation --target MyTarget"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "anchor" : "Exempting-sandbox-constraints",
          "level" : 3,
          "text" : "Exempting sandbox constraints",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Command plugins that need to write to the file system cause package manager to ask the user for approval if ",
              "type" : "text"
            },
            {
              "code" : "swift package",
              "type" : "codeVoice"
            },
            {
              "text" : " is invoked from a console, or deny the request if it is not.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Pass the flag ",
              "type" : "text"
            },
            {
              "code" : "--allow-writing-to-package-directory",
              "type" : "codeVoice"
            },
            {
              "text" : " to the ",
              "type" : "text"
            },
            {
              "code" : "swift package",
              "type" : "codeVoice"
            },
            {
              "text" : " invocation to allow the request without questions â€” this is particularly useful in a Continuous Integration environment.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Similarly, use the ",
              "type" : "text"
            },
            {
              "code" : "--allow-network-connections",
              "type" : "codeVoice"
            },
            {
              "text" : " flag to allow network connections without showing a prompt.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Enabling-Plugins",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableBuildPlugin"
      ],
      "title" : "Enabling Plugins"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/packagemanagerdocs\/enablecommandplugin"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"command-icon.svg": {
  "alt" : null,
  "identifier" : "command-icon.svg",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon.svg"
    },
    {
      "traits" : [
        "1x",
        "dark"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon~dark.svg"
    }
  ]
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs": {
  "abstract" : [
    {
      "text" : "Organize, manage, and edit Swift packages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift Package Manager",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/EnableBuildPlugin": {
  "abstract" : [
    {
      "text" : "Extend the package manager with a build plugin from another package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableBuildPlugin",
  "kind" : "article",
  "role" : "article",
  "title" : "Enable a build plugin",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/enablebuildplugin"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackagePlugin": {
  "abstract" : [
    {
      "text" : "Invoke a command plugin or perform other actions on command plugins.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackagePlugin",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift package plugin",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packageplugin"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/Plugins": {
  "abstract" : [
    {
      "text" : "Extend package manager functionality with build or command plugins.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Plugins",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/plugins"
},
"https://github.com/swiftlang/swift-docc-plugin": {
  "identifier" : "https:\/\/github.com\/swiftlang\/swift-docc-plugin",
  "title" : "swift-docc-plugin",
  "titleInlineContent" : [
    {
      "text" : "swift-docc-plugin",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/swiftlang\/swift-docc-plugin"
}
}
}