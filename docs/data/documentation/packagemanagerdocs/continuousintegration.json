{
  "abstract" : [
    {
      "text" : "Build Swift packages with an existing continuous integration setup and prepare apps that consume package dependencies within an existing CI pipeline.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Swift Package Manager"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Continuous Integration Workflows"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "inlineContent" : [
                {
                  "text" : "Continuous integration",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " (",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "CI",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ") is the process of automating and streamlining the building, analyzing, testing, archiving, and publishing of your apps to ensure that they’re always in a releasable state.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Most projects that contain or depend on Swift packages don’t require additional configuration.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Use-the-Expected-Version-of-a-Package-Dependency",
          "level" : 2,
          "text" : "Use the Expected Version of a Package Dependency",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To ensure a CI workflow’s reliability, verify it uses the appropriate version of package dependencies.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "SwiftPM records the result of dependency resolution in the file ",
              "type" : "text"
            },
            {
              "code" : "Package.resolved",
              "type" : "codeVoice"
            },
            {
              "text" : ", at the top-level of the package.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "When available, it’s used when performing dependency resolution.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Run ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageUpdate",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to update dependencies to the latest eligible versions and update ",
              "type" : "text"
            },
            {
              "code" : "Package.resolved",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For more information on resolving and updating dependencies, see ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Provide-Credentials",
          "level" : 2,
          "text" : "Provide Credentials",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To resolve package dependencies that require authentication, such as private packages, provide credentials to your CI setup.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Package manager honors the machine’s SSH configuration - there’s no additional setup required.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For private package, use the SSH-based Git URLs and configure SSH credentials.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "You may also need to set up a ",
              "type" : "text"
            },
            {
              "code" : "known_hosts",
              "type" : "codeVoice"
            },
            {
              "text" : " file in the ",
              "type" : "text"
            },
            {
              "code" : "~\/.ssh",
              "type" : "codeVoice"
            },
            {
              "text" : " directory of the user that runs your CI tasks.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "CI services like ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/www.jenkins.io\/doc\/book\/using\/using-credentials",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/en\/free-pro-team@latest\/actions\/reference\/authentication-in-a-workflow",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.travis-ci.com\/user\/private-dependencies",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", and ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/circleci.com\/docs\/2.0\/gh-bb-integration\/#security",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " provide ways to set up SSH keys or other techniques to access private repositories.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Since Package manager uses git to clone the repositories there’s no additional setup required; Package manager honors the machine’s SSH and Git configuration.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Using-xcodebuild",
          "level" : 2,
          "text" : "Using xcodebuild",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "When building on macOS based CI hosts you can use the command-line tool ",
              "type" : "text"
            },
            {
              "code" : "xcodebuild",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "xcodebuild",
              "type" : "codeVoice"
            },
            {
              "text" : " uses Xcode’s built-in Git tooling to connect to repositories.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In many cases, you don’t need to make changes to how xcodebuild connects to them.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "However, some use cases require you use the git configuration — for example URL remapping, the use of proxies, or advanced SSH configurations.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "To have xcodebuild use your Mac’s Git installation and configuration instead of Xcode’s built-in Git tooling, pass ",
              "type" : "text"
            },
            {
              "code" : "-scmProvider system",
              "type" : "codeVoice"
            },
            {
              "text" : " to the xcodebuild command.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For more information on using xcodebuild in continuous integration workflows, visit ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/swift_packages\/building_swift_packages_or_apps_that_use_them_in_continuous_integration_workflows",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Guides",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary"
      ],
      "title" : "Guides"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/packagemanagerdocs\/continuousintegration"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"command-icon.svg": {
  "alt" : null,
  "identifier" : "command-icon.svg",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon.svg"
    },
    {
      "traits" : [
        "1x",
        "dark"
      ],
      "url" : "\/images\/PackageManagerDocs\/command-icon~dark.svg"
    }
  ]
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs": {
  "abstract" : [
    {
      "text" : "Organize, manage, and edit Swift packages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift Package Manager",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/AddingDependencies": {
  "abstract" : [
    {
      "text" : "Use other swift packages, system libraries, or binary dependencies in your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Adding dependencies to a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/addingdependencies"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/BundlingResources": {
  "abstract" : [
    {
      "text" : "Add resource files to your Swift package and access them in your code.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
  "kind" : "article",
  "role" : "article",
  "title" : "Bundling resources with a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/bundlingresources"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingCLanguageTargets": {
  "abstract" : [
    {
      "text" : "Include C language code as a target in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating C language targets",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingclanguagetargets"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingSwiftPackage": {
  "abstract" : [
    {
      "text" : "Bundle executable or shareable code into a standalone Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingswiftpackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ModuleAliasing": {
  "abstract" : [
    {
      "text" : "Create aliased names for modules to avoid collisions between targets in your package or its dependencies.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
  "kind" : "article",
  "role" : "article",
  "title" : "Module Aliasing",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/modulealiasing"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageCollections": {
  "abstract" : [
    {
      "text" : "Learn to create, publish and use Swift package collections.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
  "kind" : "article",
  "role" : "article",
  "title" : "Package Collections",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packagecollections"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageUpdate": {
  "abstract" : [
    {
      "text" : "Update package dependencies.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageUpdate",
  "images" : [
    {
      "identifier" : "command-icon.svg",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "swift package update",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packageupdate"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/Plugins": {
  "abstract" : [
    {
      "text" : "Extend package manager functionality with build or command plugins.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Plugins",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/plugins"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ReleasingPublishingAPackage": {
  "abstract" : [
    {
      "text" : "Share a specific version of your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Releasing and publishing a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/releasingpublishingapackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ResolvingPackageVersions": {
  "abstract" : [
    {
      "text" : "Coordinate and constrain dependencies for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
  "kind" : "article",
  "role" : "article",
  "title" : "Resolving and updating dependencies",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/resolvingpackageversions"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SettingSwiftToolsVersion": {
  "abstract" : [
    {
      "text" : "Define the minimum version of the swift compiler required for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
  "kind" : "article",
  "role" : "article",
  "title" : "Setting the Swift tools version",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/settingswifttoolsversion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftPMAsALibrary": {
  "abstract" : [
    {
      "text" : "Include Swift Package Manager as a dependency in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Package Manager as a library",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftpmasalibrary"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftVersionSpecificPackaging": {
  "abstract" : [
    {
      "text" : "Provide a package manifest for a specific version of Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
  "kind" : "article",
  "role" : "article",
  "title" : "Packaging based on the version of Swift",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftversionspecificpackaging"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingBuildConfigurations": {
  "abstract" : [
    {
      "text" : "Control the build configuration for your app or package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
  "kind" : "article",
  "role" : "article",
  "title" : "Using build configurations",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingbuildconfigurations"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingShellCompletion": {
  "abstract" : [
    {
      "text" : "Customize your shell to automatically complete swift package commands.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
  "kind" : "article",
  "role" : "article",
  "title" : "Using shell completion scripts",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingshellcompletion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingSwiftPackageRegistry": {
  "abstract" : [
    {
      "text" : "Configure and use a package registry for Swift Package Manager.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
  "kind" : "article",
  "role" : "article",
  "title" : "Using a package registry",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingswiftpackageregistry"
},
"https://circleci.com/docs/2.0/gh-bb-integration/#security": {
  "identifier" : "https:\/\/circleci.com\/docs\/2.0\/gh-bb-integration\/#security",
  "title" : "CircleCI",
  "titleInlineContent" : [
    {
      "text" : "CircleCI",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/circleci.com\/docs\/2.0\/gh-bb-integration\/#security"
},
"https://developer.apple.com/documentation/swift_packages/building_swift_packages_or_apps_that_use_them_in_continuous_integration_workflows": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/swift_packages\/building_swift_packages_or_apps_that_use_them_in_continuous_integration_workflows",
  "title" : "Building Swift packages or apps that use them in continuous integration workflows",
  "titleInlineContent" : [
    {
      "text" : "Building Swift packages or apps that use them in continuous integration workflows",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/swift_packages\/building_swift_packages_or_apps_that_use_them_in_continuous_integration_workflows"
},
"https://docs.github.com/en/free-pro-team@latest/actions/reference/authentication-in-a-workflow": {
  "identifier" : "https:\/\/docs.github.com\/en\/free-pro-team@latest\/actions\/reference\/authentication-in-a-workflow",
  "title" : "Github Action",
  "titleInlineContent" : [
    {
      "text" : "Github Action",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/en\/free-pro-team@latest\/actions\/reference\/authentication-in-a-workflow"
},
"https://docs.travis-ci.com/user/private-dependencies": {
  "identifier" : "https:\/\/docs.travis-ci.com\/user\/private-dependencies",
  "title" : "TravisCI",
  "titleInlineContent" : [
    {
      "text" : "TravisCI",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.travis-ci.com\/user\/private-dependencies"
},
"https://www.jenkins.io/doc/book/using/using-credentials": {
  "identifier" : "https:\/\/www.jenkins.io\/doc\/book\/using\/using-credentials",
  "title" : "Jenkins",
  "titleInlineContent" : [
    {
      "text" : "Jenkins",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/www.jenkins.io\/doc\/book\/using\/using-credentials"
}
}
}