{
  "abstract" : [
    {
      "text" : "Extend package manager functionality with build or command plugins.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/Plugins"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Swift Package Manager"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "introducedAt" : "5.6",
        "name" : "Swift"
      }
    ],
    "role" : "collectionGroup",
    "title" : "Plugins"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Some of Swift Package Manager’s functionality can be extended through ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "plugins",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Write package plugins using the ",
              "type" : "text"
            },
            {
              "code" : "PackagePlugin",
              "type" : "codeVoice"
            },
            {
              "text" : " API provided by the Swift Package Manager. ",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This is similar to how the package manifest is implemented — as Swift code that runs as needed in order to produce the information package manager needs.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Package manager defines two extension points for plugins:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Custom build tool tasks that provide commands to run before or during the build. See ",
                        "type" : "text"
                      },
                      {
                        "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableBuildPlugin",
                        "isActive" : true,
                        "type" : "reference"
                      },
                      {
                        "text" : " to see how to add an existing build plugin, or ",
                        "type" : "text"
                      },
                      {
                        "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/WritingBuildToolPlugin",
                        "isActive" : true,
                        "type" : "reference"
                      },
                      {
                        "text" : " to write your own.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Build Plugin",
                    "type" : "text"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Custom commands that you run using the ",
                        "type" : "text"
                      },
                      {
                        "code" : "swift package",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : " command line interface. See ",
                        "type" : "text"
                      },
                      {
                        "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableCommandPlugin",
                        "isActive" : true,
                        "type" : "reference"
                      },
                      {
                        "text" : " to see how to add an existing command plugin, or ",
                        "type" : "text"
                      },
                      {
                        "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/WritingCommandPlugin",
                        "isActive" : true,
                        "type" : "reference"
                      },
                      {
                        "text" : " to write your own.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Command Plugin",
                    "type" : "text"
                  }
                ]
              }
            }
          ],
          "type" : "termList"
        },
        {
          "anchor" : "Plugin-Capabilities",
          "level" : 3,
          "text" : "Plugin Capabilities",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Plugins have access to a representation of the package model.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Command plugins can also invoke services provided by package manager to build and test products and targets defined in the package to which the plugin is applied.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Every plugin runs as a separate process from the package manager.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "On platforms that support sandboxing, package manager wraps the plugin in a sandbox that prevents network access and attempts to write to arbitrary locations in the file system.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "All plugins can write to a temporary directory.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Custom command plugins that need to modify the package source code can specify this requirement.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "If the user approves, package manager grants write access to the package directory.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Build tool plugins can’t modify the package source code.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Creating-Plugins",
          "level" : 3,
          "text" : "Creating Plugins",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "When creating a plugin, represent a plugin in the package manifest as a target of the ",
              "type" : "text"
            },
            {
              "code" : "pluginTarget",
              "type" : "codeVoice"
            },
            {
              "text" : " type.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "If it should be available to other packages, also include a corresponding ",
              "type" : "text"
            },
            {
              "code" : "pluginProduct",
              "type" : "codeVoice"
            },
            {
              "text" : " target.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Source code for a plugin is normally located in a directory under the ",
              "type" : "text"
            },
            {
              "code" : "Plugins",
              "type" : "codeVoice"
            },
            {
              "text" : " directory in the package, but this can be customized.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "A plugin declares which extension point it implements by defining the plugin’s ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "capability",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This determines the entry point through which package manager will call it, and determines which actions the plugin can perform.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "References",
          "level" : 3,
          "text" : "References",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "“Meet Swift Package plugins” ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2022-110359",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "“Create Swift Package plugins” ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2022-110401",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Guides",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary"
      ],
      "title" : "Guides"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Enabling-Plugins",
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableCommandPlugin",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableBuildPlugin"
      ],
      "title" : "Enabling Plugins"
    },
    {
      "anchor" : "Writing-Plugins",
      "identifiers" : [
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/WritingCommandPlugin",
        "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/WritingBuildToolPlugin"
      ],
      "title" : "Writing Plugins"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/packagemanagerdocs\/plugins"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PackageManagerDocs/documentation/PackageManagerDocs": {
  "abstract" : [
    {
      "text" : "Organize, manage, and edit Swift packages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift Package Manager",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/AddingDependencies": {
  "abstract" : [
    {
      "text" : "Use other swift packages, system libraries, or binary dependencies in your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/AddingDependencies",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Adding dependencies to a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/addingdependencies"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/BundlingResources": {
  "abstract" : [
    {
      "text" : "Add resource files to your Swift package and access them in your code.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/BundlingResources",
  "kind" : "article",
  "role" : "article",
  "title" : "Bundling resources with a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/bundlingresources"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ContinuousIntegration": {
  "abstract" : [
    {
      "text" : "Build Swift packages with an existing continuous integration setup and prepare apps that consume package dependencies within an existing CI pipeline.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ContinuousIntegration",
  "kind" : "article",
  "role" : "article",
  "title" : "Continuous Integration Workflows",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/continuousintegration"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingCLanguageTargets": {
  "abstract" : [
    {
      "text" : "Include C language code as a target in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingCLanguageTargets",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating C language targets",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingclanguagetargets"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/CreatingSwiftPackage": {
  "abstract" : [
    {
      "text" : "Bundle executable or shareable code into a standalone Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/CreatingSwiftPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/creatingswiftpackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/EnableBuildPlugin": {
  "abstract" : [
    {
      "text" : "Extend the package manager with a build plugin from another package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableBuildPlugin",
  "kind" : "article",
  "role" : "article",
  "title" : "Enable a build plugin",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/enablebuildplugin"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/EnableCommandPlugin": {
  "abstract" : [
    {
      "text" : "Extend package manager commands with a command plugin from another package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/EnableCommandPlugin",
  "kind" : "article",
  "role" : "article",
  "title" : "Enable a command plugin",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/enablecommandplugin"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ModuleAliasing": {
  "abstract" : [
    {
      "text" : "Create aliased names for modules to avoid collisions between targets in your package or its dependencies.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ModuleAliasing",
  "kind" : "article",
  "role" : "article",
  "title" : "Module Aliasing",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/modulealiasing"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/PackageCollections": {
  "abstract" : [
    {
      "text" : "Learn to create, publish and use Swift package collections.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/PackageCollections",
  "kind" : "article",
  "role" : "article",
  "title" : "Package Collections",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/packagecollections"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ReleasingPublishingAPackage": {
  "abstract" : [
    {
      "text" : "Share a specific version of your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ReleasingPublishingAPackage",
  "kind" : "article",
  "role" : "article",
  "title" : "Releasing and publishing a Swift package",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/releasingpublishingapackage"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/ResolvingPackageVersions": {
  "abstract" : [
    {
      "text" : "Coordinate and constrain dependencies for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/ResolvingPackageVersions",
  "kind" : "article",
  "role" : "article",
  "title" : "Resolving and updating dependencies",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/resolvingpackageversions"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SettingSwiftToolsVersion": {
  "abstract" : [
    {
      "text" : "Define the minimum version of the swift compiler required for your package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SettingSwiftToolsVersion",
  "kind" : "article",
  "role" : "article",
  "title" : "Setting the Swift tools version",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/settingswifttoolsversion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftPMAsALibrary": {
  "abstract" : [
    {
      "text" : "Include Swift Package Manager as a dependency in your Swift package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftPMAsALibrary",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Package Manager as a library",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftpmasalibrary"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/SwiftVersionSpecificPackaging": {
  "abstract" : [
    {
      "text" : "Provide a package manifest for a specific version of Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/SwiftVersionSpecificPackaging",
  "kind" : "article",
  "role" : "article",
  "title" : "Packaging based on the version of Swift",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/swiftversionspecificpackaging"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingBuildConfigurations": {
  "abstract" : [
    {
      "text" : "Control the build configuration for your app or package.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingBuildConfigurations",
  "kind" : "article",
  "role" : "article",
  "title" : "Using build configurations",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingbuildconfigurations"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingShellCompletion": {
  "abstract" : [
    {
      "text" : "Customize your shell to automatically complete swift package commands.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingShellCompletion",
  "kind" : "article",
  "role" : "article",
  "title" : "Using shell completion scripts",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingshellcompletion"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/UsingSwiftPackageRegistry": {
  "abstract" : [
    {
      "text" : "Configure and use a package registry for Swift Package Manager.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/UsingSwiftPackageRegistry",
  "kind" : "article",
  "role" : "article",
  "title" : "Using a package registry",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/usingswiftpackageregistry"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/WritingBuildToolPlugin": {
  "abstract" : [
    {
      "text" : "Create a build tool to process or generate files.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/WritingBuildToolPlugin",
  "kind" : "article",
  "role" : "article",
  "title" : "Writing a build tool plugin",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/writingbuildtoolplugin"
},
"doc://PackageManagerDocs/documentation/PackageManagerDocs/WritingCommandPlugin": {
  "abstract" : [
    {
      "text" : "Create a command plugin to provide commands that extend the package manager.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PackageManagerDocs\/documentation\/PackageManagerDocs\/WritingCommandPlugin",
  "kind" : "article",
  "role" : "article",
  "title" : "Writing a command plugin",
  "type" : "topic",
  "url" : "\/documentation\/packagemanagerdocs\/writingcommandplugin"
},
"https://developer.apple.com/videos/play/wwdc2022-110359": {
  "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2022-110359",
  "title" : "WWDC22 session",
  "titleInlineContent" : [
    {
      "text" : "WWDC22 session",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2022-110359"
},
"https://developer.apple.com/videos/play/wwdc2022-110401": {
  "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2022-110401",
  "title" : "WWDC22 session",
  "titleInlineContent" : [
    {
      "text" : "WWDC22 session",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2022-110401"
}
}
}